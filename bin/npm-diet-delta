#!/usr/bin/env node

// This file is distributed under the MIT license.
// See LICENSE file in the project root for details.

'use strict';

const { promisify } = require('util');

const fs = require('fs');
const streamToString = require('stream-to-string');
const { program, delta } = require('../lib');

const readFile = promisify(fs.readFile);

const HELP = `
  Description:
`;

program
  .description(
    'Compute a difference from a baselin analysis')
  .option(
    '--stdin',
    'read package specifiers from STDIN before reading from arguments')
  .arguments(
    '[baseline] [analysis]')
  .allowUnknownOption()  // for '--no-color'
  .on('--help', () => console.log(HELP))
  .action(async (baselineFile, analysisFile, options) => {
    let baselineJson, analysisJson;
    if (options.stdin) {
      [baselineJson, analysisJson] =
        (await streamToString(process.stdin)).split('\n');
      if (baselineJson === undefined) {
        throw new Error('no baseline data read from STDIN');
      }
      if (baselineFile) {
        if (baselineFile) {
          analysisJson = await readFile(baselineFile, { encoding: 'utf8' });
        }
      }
      if (analysisJson === undefined) {
        throw new Error('no analysis data')
      }
    } else {
      if (baselineFile === undefined) {
        throw new Error('no baseline file specified in arguments');
      }
      if (analysisFile === undefined) {
        throw new Error('no analysis file specified in arguments');
      }
      baselineJson = await readFile(baselineFile,{ encoding: 'utf8' });
      analysisJson = await readFile(analysisFile,{ encoding: 'utf8' });
    }
    const baseline = JSON.parse(baselineJson);
    const analysis = JSON.parse(analysisJson);
    const deltaAnalysis = delta(baseline, analysis);
    console.log(JSON.stringify(deltaAnalysis));
  })
  .parse(process.argv);
